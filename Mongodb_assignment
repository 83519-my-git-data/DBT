
Q1)Install mongodb databas server
ANS)sudo apt-get install gnupg curl
==========================================================================================================================================================================================================


Q2)Create a directory/folder to store mongodb datafiles
ANS) echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
========================================================================================================================================================================================================================


Q3)Set necessary path environment variable
ANS) echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d mongodb-org-7.0.list
===========================================================================================================================================================================================================


Q4)Startup MongoDB database
ANS) sudo systemctl start mongod
==========================================================================================================================================================================================================


Q5)Connect to MongoDB database through MongoDB shell command line interface the
ANS) shivani@shivani-550XED:~$ mongosh
Current Mongosh Log ID:	65f55ea63e21ceb9a4db83af
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.0
Using MongoDB:		7.0.6
Using Mongosh:		2.2.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-03-16T14:10:56.284+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-03-16T14:10:56.557+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2024-03-16T14:10:56.557+05:30: vm.max_map_count is too low
------
============================================================================================================================================================================================================


Q6)View list of available databases
ANS) test> show dbs
admin   40.00 KiB
config  72.00 KiB
local   72.00 KiB
============================================================================================================================================================================================================


Q7)Create a new database named CDAC and connect to it
ANS) test> use cdac
switched to db cdac

==============================================================================================================================================================================================================


Q8)View list of available collections in CDAC database
ANS) cdac> show collections;
library
================================================================================================================================================================================================================


Q9)Create a new collection by the name of LIBRARY
ANS) dac> show collections;
library
=============================================================================================================================================================================================================


Q10)Insert the following document in the
ANS) LIBRARY collection:-

title: 'MongoDB programming',

author: 'Sameer', likes: 100
ANS)cdac> db.library.insert({title:'mongodb programming',author:'sameer',likes:100})
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f5646e3e21ceb9a4db83b0') }
}
============================================================================================================================================================================================================


Q11)View the recently inserted document and note the id field
ANS) cdac> db.library.find()
[
  {
    _id: ObjectId('65f5646e3e21ceb9a4db83b0'),
    title: 'mongodb programming',
    author: 'sameer',
    likes: 100
  }
]

[_id field = insertedIds: { '0': ObjectId('65f5646e3e21ceb9a4db83b0') }]
==========================================================================================================================================================================================================


Q12)Insert another document in the LIBRARY collection as follows:-

ANS) title: 'MySQL programming',

authors: ['Jack', 'Jill'], likes: 200

ANS)cdac> db.library.insert({title:'mysql programming',authors:['jack','jill'],likes:200,price:150})
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f565ba3e21ceb9a4db83b1') }
}
=============================================================================================================================================================================================================


Q13)View the inserted documents
ANS) cdac> db.library.find()
[
  {
    _id: ObjectId('65f5646e3e21ceb9a4db83b0'),
    title: 'mongodb programming',
    author: 'sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f565ba3e21ceb9a4db83b1'),
    title: 'mysql programming',
    authors: [ 'jack', 'jill' ],
    likes: 200,
    price: 150
  }
]
============================================================================================================================================================================================================


Q14)14. View only the first inserted document
ANS) cdac> db.library.findOne()
{
  _id: ObjectId('65f5646e3e21ceb9a4db83b0'),
  title: 'mongodb programming',
  author: 'sameer',
  likes: 100
}
==========================================================================================================================================================================================================


Q15)View the documents using the pretty () method
ANS) cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f5646e3e21ceb9a4db83b0'),
    title: 'mongodb programming',
    author: 'sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f565ba3e21ceb9a4db83b1'),
    title: 'mysql programming',
    authors: [ 'jack', 'jill' ],
    likes: 200,
    price: 150
  }
]
===========================================================================================================================================================================================================


Q16)16. Update the document where author name Sameer and change it to Sameer Dehadrai
ANS) cdac> db.library.update({author:'sameer'},{$set:{author:'sameer dehadrai'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
=============================================================================================================================================================================================================


Q17)Delete all documents that have 100 likes
ANS) cdac> db.library.remove({likes:100})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }
==========================================================================================================================================================================================================


Q18)Drop the LIBRARY collection
ANS) cdac> db.library.drop()
true

===============================================================================================================================================================================================================

Q19)Drop the CDAC database
ANS) cdac> db.dropDatabase()
{ ok: 1, dropped: 'cdac' }
===============================================================================================================================================================================================================

Q20)Exit from MongoDB shell
ANS) EXIT
===========================================================================================================================================================================================================


Q21)Stop MongoDB server
ANS) FIRST EXIT FROM THE MONGODB 
PRESS CTRL+C.
